# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        head=l1
        nums1=[]
        while head!=None:
            nums1.append(head.val)
            head=head.next
        head=l2
        print(nums1)
        nums2=[]
        while head!=None:
            nums2.append(head.val)
            head=head.next
        if len(nums1)<len(nums2):
            for i in range(len(nums2)-len(nums1)):
                nums1.append(0)
        elif len(nums1)>len(nums2):
            for i in range(len(nums1)-len(nums2)):
                nums2.append(0)
        b=0
        lstt=[]
        i=0
        j=0
        while i<len(nums1) and j<len(nums2):
            sum=nums1[i]+nums2[j]+b
            lstt.append(sum%10)
            b=sum//10
            i=i+1
            j=j+1
            
        if b==1:
           lstt.append(1)


        head=ListNode(lstt[0])
        normal=head
        for i in range(1,len(lstt)):
            node=ListNode(lstt[i])
            head.next=node
            head=node

        return normal
