#Definition for singly-linked list.
class ListNode(object):
   def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        head=l1
        nums1=[]
        while head!=None:
            nums1.append(head.val)
            head=head.next
        head=l2
        print(nums1)
        nums2=[]
        while head!=None:
            nums2.append(head.val)
            head=head.next
        print(nums2)
        new_list=[]
        b=0
        for i in range(len(nums1):
           sum=num1[i]+num2[j]+b
           new_list=new_list.append(sum%10)
            
        '''
        node=ListNode(nums%10)
        head=node
        nums=nums//10
        while nums!=0:
            node2=ListNode(nums%10)
            head.next=node2
            head=node2
            nums=nums//10
        head=node
        while(head!=None):
            print(head.val)
            head=head.next
        return node  '''


l1=ListNode(2)
l2=ListNode(4)
l1.next=l2
l2.next=ListNode(3)

l2=ListNode(5)
l3=ListNode(6)
l2.next=l3
l3.next=ListNode(4)

s=Solution()
print(s.addTwoNumbers(l1,l2))
